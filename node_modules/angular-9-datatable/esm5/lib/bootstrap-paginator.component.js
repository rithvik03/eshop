import { __decorate, __metadata } from "tslib";
import { Component, Input } from "@angular/core";
import { DataTable } from "./data-table.directive";
import * as _ from "lodash";
var BootstrapPaginator = /** @class */ (function () {
    function BootstrapPaginator() {
        this.rowsOnPageSet = [];
        this.minRowsOnPage = 0;
    }
    BootstrapPaginator.prototype.ngOnChanges = function (changes) {
        if (changes.rowsOnPageSet) {
            this.minRowsOnPage = _.min(this.rowsOnPageSet);
        }
    };
    __decorate([
        Input("rowsOnPageSet"),
        __metadata("design:type", Object)
    ], BootstrapPaginator.prototype, "rowsOnPageSet", void 0);
    __decorate([
        Input("mfTable"),
        __metadata("design:type", DataTable)
    ], BootstrapPaginator.prototype, "mfTable", void 0);
    BootstrapPaginator = __decorate([
        Component({
            selector: "mfBootstrapPaginator",
            template: "\n    <mfPaginator #p [mfTable]=\"mfTable\">\n        <ul class=\"pagination\" *ngIf=\"p.dataLength > p.rowsOnPage\">\n            <li class=\"page-item\" [class.disabled]=\"p.activePage <= 1\" (click)=\"p.setPage(1)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">&laquo;</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage > 4 && p.activePage + 1 > p.lastPage\" (click)=\"p.setPage(p.activePage - 4)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-4}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage > 3 && p.activePage + 2 > p.lastPage\" (click)=\"p.setPage(p.activePage - 3)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-3}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage > 2\" (click)=\"p.setPage(p.activePage - 2)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-2}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage > 1\" (click)=\"p.setPage(p.activePage - 1)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage-1}}</a>\n            </li>\n            <li class=\"page-item active\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage + 1 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 1)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+1}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage + 2 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 2)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+2}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage + 3 <= p.lastPage && p.activePage < 3\" (click)=\"p.setPage(p.activePage + 3)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+3}}</a>\n            </li>\n            <li class=\"page-item\" *ngIf=\"p.activePage + 4 <= p.lastPage && p.activePage < 2\" (click)=\"p.setPage(p.activePage + 4)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{p.activePage+4}}</a>\n            </li>\n            <li class=\"page-item\" [class.disabled]=\"p.activePage >= p.lastPage\" (click)=\"p.setPage(p.lastPage)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">&raquo;</a>\n            </li>\n        </ul>\n        <ul class=\"pagination pull-right float-sm-right\" *ngIf=\"p.dataLength > minRowsOnPage\">\n            <li class=\"page-item\" *ngFor=\"let rows of rowsOnPageSet\" [class.active]=\"p.rowsOnPage===rows\" (click)=\"p.setRowsOnPage(rows)\">\n                <a class=\"page-link\" style=\"cursor: pointer\">{{rows}}</a>\n            </li>\n        </ul>\n    </mfPaginator>\n    "
        })
    ], BootstrapPaginator);
    return BootstrapPaginator;
}());
export { BootstrapPaginator };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLXBhZ2luYXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLTktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2Jvb3RzdHJhcC1wYWdpbmF0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbkQsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFpRDVCO0lBQUE7UUFDNEIsa0JBQWEsR0FBRyxFQUFFLENBQUM7UUFHM0Msa0JBQWEsR0FBRyxDQUFDLENBQUM7SUFPdEIsQ0FBQztJQUxHLHdDQUFXLEdBQVgsVUFBWSxPQUFZO1FBQ3BCLElBQUksT0FBTyxDQUFDLGFBQWEsRUFBRTtZQUN2QixJQUFJLENBQUMsYUFBYSxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1NBQ2pEO0lBQ0wsQ0FBQztJQVR1QjtRQUF2QixLQUFLLENBQUMsZUFBZSxDQUFDOzs2REFBb0I7SUFDekI7UUFBakIsS0FBSyxDQUFDLFNBQVMsQ0FBQztrQ0FBVSxTQUFTO3VEQUFDO0lBRjVCLGtCQUFrQjtRQS9DOUIsU0FBUyxDQUFDO1lBQ1AsUUFBUSxFQUFFLHNCQUFzQjtZQUNoQyxRQUFRLEVBQUUsMDRGQTJDVDtTQUNKLENBQUM7T0FDVyxrQkFBa0IsQ0FXOUI7SUFBRCx5QkFBQztDQUFBLEFBWEQsSUFXQztTQVhZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uQ2hhbmdlcyB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XHJcbmltcG9ydCB7IERhdGFUYWJsZSB9IGZyb20gXCIuL2RhdGEtdGFibGUuZGlyZWN0aXZlXCI7XHJcbmltcG9ydCAqIGFzIF8gZnJvbSBcImxvZGFzaFwiO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogXCJtZkJvb3RzdHJhcFBhZ2luYXRvclwiLFxyXG4gICAgdGVtcGxhdGU6IGBcclxuICAgIDxtZlBhZ2luYXRvciAjcCBbbWZUYWJsZV09XCJtZlRhYmxlXCI+XHJcbiAgICAgICAgPHVsIGNsYXNzPVwicGFnaW5hdGlvblwiICpuZ0lmPVwicC5kYXRhTGVuZ3RoID4gcC5yb3dzT25QYWdlXCI+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiIFtjbGFzcy5kaXNhYmxlZF09XCJwLmFjdGl2ZVBhZ2UgPD0gMVwiIChjbGljayk9XCJwLnNldFBhZ2UoMSlcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj4mbGFxdW87PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDQgJiYgcC5hY3RpdmVQYWdlICsgMSA+IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDQpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtNH19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDMgJiYgcC5hY3RpdmVQYWdlICsgMiA+IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDMpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtM319PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDJcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDIpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtMn19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSA+IDFcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSAtIDEpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UtMX19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW0gYWN0aXZlXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2V9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgKyAxIDw9IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSArIDEpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UrMX19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSArIDIgPD0gcC5sYXN0UGFnZVwiIChjbGljayk9XCJwLnNldFBhZ2UocC5hY3RpdmVQYWdlICsgMilcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj57e3AuYWN0aXZlUGFnZSsyfX08L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiICpuZ0lmPVwicC5hY3RpdmVQYWdlICsgMyA8PSBwLmxhc3RQYWdlICYmIHAuYWN0aXZlUGFnZSA8IDNcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSArIDMpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UrM319PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSArIDQgPD0gcC5sYXN0UGFnZSAmJiBwLmFjdGl2ZVBhZ2UgPCAyXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgKyA0KVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlKzR9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgW2NsYXNzLmRpc2FibGVkXT1cInAuYWN0aXZlUGFnZSA+PSBwLmxhc3RQYWdlXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmxhc3RQYWdlKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPiZyYXF1bzs8L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgPC91bD5cclxuICAgICAgICA8dWwgY2xhc3M9XCJwYWdpbmF0aW9uIHB1bGwtcmlnaHQgZmxvYXQtc20tcmlnaHRcIiAqbmdJZj1cInAuZGF0YUxlbmd0aCA+IG1pblJvd3NPblBhZ2VcIj5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nRm9yPVwibGV0IHJvd3Mgb2Ygcm93c09uUGFnZVNldFwiIFtjbGFzcy5hY3RpdmVdPVwicC5yb3dzT25QYWdlPT09cm93c1wiIChjbGljayk9XCJwLnNldFJvd3NPblBhZ2Uocm93cylcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj57e3Jvd3N9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICA8L3VsPlxyXG4gICAgPC9tZlBhZ2luYXRvcj5cclxuICAgIGBcclxufSlcclxuZXhwb3J0IGNsYXNzIEJvb3RzdHJhcFBhZ2luYXRvciBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XHJcbiAgICBASW5wdXQoXCJyb3dzT25QYWdlU2V0XCIpIHJvd3NPblBhZ2VTZXQgPSBbXTtcclxuICAgIEBJbnB1dChcIm1mVGFibGVcIikgbWZUYWJsZTogRGF0YVRhYmxlO1xyXG5cclxuICAgIG1pblJvd3NPblBhZ2UgPSAwO1xyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IGFueSk6IGFueSB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXMucm93c09uUGFnZVNldCkge1xyXG4gICAgICAgICAgICB0aGlzLm1pblJvd3NPblBhZ2UgPSBfLm1pbih0aGlzLnJvd3NPblBhZ2VTZXQpXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19