import { __decorate, __metadata, __param } from 'tslib';
import { EventEmitter, IterableDiffers, Input, Output, Directive, Component, Optional, NgModule } from '@angular/core';
import { includes, orderBy, slice, min } from 'lodash';
import { ReplaySubject } from 'rxjs';
import { CommonModule } from '@angular/common';

import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function DefaultSorter_span_2_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 3);
} }
function DefaultSorter_span_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "span", 4);
} }
const _c0 = ["*"];
function BootstrapPaginator_ul_2_li_4_Template(rf, ctx) { if (rf & 1) {
    const _r12 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_4_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r12); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage - 4); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage - 4);
} }
function BootstrapPaginator_ul_2_li_5_Template(rf, ctx) { if (rf & 1) {
    const _r14 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_5_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r14); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage - 3); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage - 3);
} }
function BootstrapPaginator_ul_2_li_6_Template(rf, ctx) { if (rf & 1) {
    const _r16 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_6_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r16); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage - 2); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage - 2);
} }
function BootstrapPaginator_ul_2_li_7_Template(rf, ctx) { if (rf & 1) {
    const _r18 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_7_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r18); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage - 1); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage - 1);
} }
function BootstrapPaginator_ul_2_li_11_Template(rf, ctx) { if (rf & 1) {
    const _r20 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_11_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r20); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage + 1); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage + 1);
} }
function BootstrapPaginator_ul_2_li_12_Template(rf, ctx) { if (rf & 1) {
    const _r22 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_12_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r22); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage + 2); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage + 2);
} }
function BootstrapPaginator_ul_2_li_13_Template(rf, ctx) { if (rf & 1) {
    const _r24 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_13_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r24); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage + 3); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage + 3);
} }
function BootstrapPaginator_ul_2_li_14_Template(rf, ctx) { if (rf & 1) {
    const _r26 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_li_14_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r26); ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.activePage + 4); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage + 4);
} }
function BootstrapPaginator_ul_2_Template(rf, ctx) { if (rf & 1) {
    const _r28 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "ul", 4);
    ɵngcc0.ɵɵelementStart(1, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_Template_li_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r28); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(1); });
    ɵngcc0.ɵɵelementStart(2, "a", 6);
    ɵngcc0.ɵɵtext(3, "\u00AB");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(4, BootstrapPaginator_ul_2_li_4_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(5, BootstrapPaginator_ul_2_li_5_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(6, BootstrapPaginator_ul_2_li_6_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(7, BootstrapPaginator_ul_2_li_7_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵelementStart(8, "li", 8);
    ɵngcc0.ɵɵelementStart(9, "a", 6);
    ɵngcc0.ɵɵtext(10);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(11, BootstrapPaginator_ul_2_li_11_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(12, BootstrapPaginator_ul_2_li_12_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(13, BootstrapPaginator_ul_2_li_13_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵtemplate(14, BootstrapPaginator_ul_2_li_14_Template, 3, 1, "li", 7);
    ɵngcc0.ɵɵelementStart(15, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_2_Template_li_click_15_listener() { ɵngcc0.ɵɵrestoreView(_r28); ɵngcc0.ɵɵnextContext(); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setPage(_r0.lastPage); });
    ɵngcc0.ɵɵelementStart(16, "a", 6);
    ɵngcc0.ɵɵtext(17, "\u00BB");
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    ɵngcc0.ɵɵnextContext();
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("disabled", _r0.activePage <= 1);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage > 4 && _r0.activePage + 1 > _r0.lastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage > 3 && _r0.activePage + 2 > _r0.lastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage > 2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage > 1);
    ɵngcc0.ɵɵadvance(3);
    ɵngcc0.ɵɵtextInterpolate(_r0.activePage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage + 1 <= _r0.lastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage + 2 <= _r0.lastPage);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage + 3 <= _r0.lastPage && _r0.activePage < 3);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", _r0.activePage + 4 <= _r0.lastPage && _r0.activePage < 2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵclassProp("disabled", _r0.activePage >= _r0.lastPage);
} }
function BootstrapPaginator_ul_3_li_1_Template(rf, ctx) { if (rf & 1) {
    const _r33 = ɵngcc0.ɵɵgetCurrentView();
    ɵngcc0.ɵɵelementStart(0, "li", 5);
    ɵngcc0.ɵɵlistener("click", function BootstrapPaginator_ul_3_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r33); const rows_r31 = ctx.$implicit; ɵngcc0.ɵɵnextContext(2); const _r0 = ɵngcc0.ɵɵreference(1); return _r0.setRowsOnPage(rows_r31); });
    ɵngcc0.ɵɵelementStart(1, "a", 6);
    ɵngcc0.ɵɵtext(2);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const rows_r31 = ctx.$implicit;
    ɵngcc0.ɵɵnextContext(2);
    const _r0 = ɵngcc0.ɵɵreference(1);
    ɵngcc0.ɵɵclassProp("active", _r0.rowsOnPage === rows_r31);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵtextInterpolate(rows_r31);
} }
function BootstrapPaginator_ul_3_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "ul", 9);
    ɵngcc0.ɵɵtemplate(1, BootstrapPaginator_ul_3_li_1_Template, 3, 3, "li", 10);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngForOf", ctx_r2.rowsOnPageSet);
} }
let DataTable = class DataTable {
    constructor(differs) {
        this.differs = differs;
        this.inputData = [];
        this.sortBy = "";
        this.sortOrder = "asc";
        this.sortByChange = new EventEmitter();
        this.sortOrderChange = new EventEmitter();
        this.rowsOnPage = 1000;
        this.activePage = 1;
        this.mustRecalculateData = false;
        this.onSortChange = new ReplaySubject(1);
        this.onPageChange = new EventEmitter();
        this.diff = differs.find([]).create(null);
    }
    getSort() {
        return { sortBy: this.sortBy, sortOrder: this.sortOrder };
    }
    setSort(sortBy, sortOrder) {
        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {
            this.sortBy = sortBy;
            this.sortOrder = includes(["asc", "desc"], sortOrder) ? sortOrder : "asc";
            this.mustRecalculateData = true;
            this.onSortChange.next({ sortBy: sortBy, sortOrder: sortOrder });
            this.sortByChange.emit(this.sortBy);
            this.sortOrderChange.emit(this.sortOrder);
        }
    }
    getPage() {
        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };
    }
    setPage(activePage, rowsOnPage) {
        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {
            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);
            this.rowsOnPage = rowsOnPage;
            this.mustRecalculateData = true;
            this.onPageChange.emit({
                activePage: this.activePage,
                rowsOnPage: this.rowsOnPage,
                dataLength: this.inputData ? this.inputData.length : 0
            });
        }
    }
    calculateNewActivePage(previousRowsOnPage, currentRowsOnPage) {
        let firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;
        let newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);
        return newActivePage;
    }
    recalculatePage() {
        let lastPage = Math.ceil(this.inputData.length / this.rowsOnPage);
        this.activePage = lastPage < this.activePage ? lastPage : this.activePage;
        this.activePage = this.activePage || 1;
        this.onPageChange.emit({
            activePage: this.activePage,
            rowsOnPage: this.rowsOnPage,
            dataLength: this.inputData.length
        });
    }
    ngOnChanges(changes) {
        if (changes["rowsOnPage"]) {
            this.rowsOnPage = changes["rowsOnPage"].previousValue;
            this.setPage(this.activePage, changes["rowsOnPage"].currentValue);
            this.mustRecalculateData = true;
        }
        if (changes["sortBy"] || changes["sortOrder"]) {
            if (!includes(["asc", "desc"], this.sortOrder)) {
                console.warn("angular2-datatable: value for input mfSortOrder must be one of ['asc', 'desc'], but is:", this.sortOrder);
                this.sortOrder = "asc";
            }
            if (this.sortBy) {
                this.onSortChange.next({ sortBy: this.sortBy, sortOrder: this.sortOrder });
            }
            this.mustRecalculateData = true;
        }
        if (changes["inputData"]) {
            this.inputData = changes["inputData"].currentValue || [];
            this.recalculatePage();
            this.mustRecalculateData = true;
        }
    }
    ngDoCheck() {
        let changes = this.diff.diff(this.inputData);
        if (changes) {
            this.recalculatePage();
            this.mustRecalculateData = true;
        }
        if (this.mustRecalculateData) {
            this.fillData();
            this.mustRecalculateData = false;
        }
    }
    fillData() {
        this.activePage = this.activePage;
        this.rowsOnPage = this.rowsOnPage;
        let offset = (this.activePage - 1) * this.rowsOnPage;
        let data = this.inputData;
        var sortBy = this.sortBy;
        if (typeof sortBy === 'string' || sortBy instanceof String) {
            data = orderBy(data, this.caseInsensitiveIteratee(sortBy), this.sortOrder == 'asc' ? 'asc' : 'desc');
        }
        else {
            data = orderBy(data, sortBy, this.sortOrder == 'asc' ? 'asc' : 'desc');
        }
        data = slice(data, offset, offset + this.rowsOnPage);
        this.data = data;
    }
    caseInsensitiveIteratee(sortBy) {
        return (row) => {
            var value = row;
            for (let sortByProperty of sortBy.split('.')) {
                if (value) {
                    value = value[sortByProperty];
                }
            }
            if (value && typeof value === 'string' || value instanceof String) {
                return value.toLowerCase();
            }
            return value;
        };
    }
};
DataTable.ɵfac = function DataTable_Factory(t) { return new (t || DataTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers)); };
DataTable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: DataTable, selectors: [["table", "mfData", ""]], inputs: { inputData: ["mfData", "inputData"], sortBy: ["mfSortBy", "sortBy"], sortOrder: ["mfSortOrder", "sortOrder"], rowsOnPage: ["mfRowsOnPage", "rowsOnPage"], activePage: ["mfActivePage", "activePage"] }, outputs: { sortByChange: "mfSortByChange", sortOrderChange: "mfSortOrderChange" }, exportAs: ["mfDataTable"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });
DataTable.ctorParameters = () => [
    { type: IterableDiffers }
];
__decorate([
    Input("mfData"),
    __metadata("design:type", Array)
], DataTable.prototype, "inputData", void 0);
__decorate([
    Input("mfSortBy"),
    __metadata("design:type", Object)
], DataTable.prototype, "sortBy", void 0);
__decorate([
    Input("mfSortOrder"),
    __metadata("design:type", Object)
], DataTable.prototype, "sortOrder", void 0);
__decorate([
    Output("mfSortByChange"),
    __metadata("design:type", Object)
], DataTable.prototype, "sortByChange", void 0);
__decorate([
    Output("mfSortOrderChange"),
    __metadata("design:type", Object)
], DataTable.prototype, "sortOrderChange", void 0);
__decorate([
    Input("mfRowsOnPage"),
    __metadata("design:type", Object)
], DataTable.prototype, "rowsOnPage", void 0);
__decorate([
    Input("mfActivePage"),
    __metadata("design:type", Object)
], DataTable.prototype, "activePage", void 0);
DataTable = __decorate([ __metadata("design:paramtypes", [IterableDiffers])
], DataTable);

let DefaultSorter = class DefaultSorter {
    constructor(mfTable) {
        this.mfTable = mfTable;
        this.isSortedByMeAsc = false;
        this.isSortedByMeDesc = false;
    }
    ngOnInit() {
        this.mfTable.onSortChange.subscribe((event) => {
            this.isSortedByMeAsc = (event.sortBy == this.sortBy && event.sortOrder == "asc");
            this.isSortedByMeDesc = (event.sortBy == this.sortBy && event.sortOrder == "desc");
        });
    }
    sort() {
        if (this.isSortedByMeAsc) {
            this.mfTable.setSort(this.sortBy, "desc");
        }
        else {
            this.mfTable.setSort(this.sortBy, "asc");
        }
    }
};
DefaultSorter.ɵfac = function DefaultSorter_Factory(t) { return new (t || DefaultSorter)(ɵngcc0.ɵɵdirectiveInject(DataTable)); };
DefaultSorter.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: DefaultSorter, selectors: [["mfDefaultSorter"]], inputs: { sortBy: ["by", "sortBy"] }, ngContentSelectors: _c0, decls: 4, vars: 2, consts: [[1, "text-nowrap", 2, "cursor", "pointer", 3, "click"], ["class", "glyphicon glyphicon-triangle-top fa fa-sort-up", "aria-hidden", "true", 4, "ngIf"], ["class", "glyphicon glyphicon-triangle-bottom fa fa-sort-down", "aria-hidden", "true", 4, "ngIf"], ["aria-hidden", "true", 1, "glyphicon", "glyphicon-triangle-top", "fa", "fa-sort-up"], ["aria-hidden", "true", 1, "glyphicon", "glyphicon-triangle-bottom", "fa", "fa-sort-down"]], template: function DefaultSorter_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵelementStart(0, "a", 0);
        ɵngcc0.ɵɵlistener("click", function DefaultSorter_Template_a_click_0_listener() { return ctx.sort(); });
        ɵngcc0.ɵɵprojection(1);
        ɵngcc0.ɵɵtemplate(2, DefaultSorter_span_2_Template, 1, 0, "span", 1);
        ɵngcc0.ɵɵtemplate(3, DefaultSorter_span_3_Template, 1, 0, "span", 2);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSortedByMeAsc);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", ctx.isSortedByMeDesc);
    } }, directives: [ɵngcc1.NgIf], encapsulation: 2 });
DefaultSorter.ctorParameters = () => [
    { type: DataTable }
];
__decorate([
    Input("by"),
    __metadata("design:type", String)
], DefaultSorter.prototype, "sortBy", void 0);
DefaultSorter = __decorate([ __metadata("design:paramtypes", [DataTable])
], DefaultSorter);

let Paginator = class Paginator {
    constructor(injectMfTable) {
        this.injectMfTable = injectMfTable;
        this.dataLength = 0;
        this.onPageChangeSubscriber = (event) => {
            this.activePage = event.activePage;
            this.rowsOnPage = event.rowsOnPage;
            this.dataLength = event.dataLength;
            this.lastPage = Math.ceil(this.dataLength / this.rowsOnPage);
        };
    }
    ngOnChanges(changes) {
        this.mfTable = this.inputMfTable || this.injectMfTable;
        this.onPageChangeSubscriber(this.mfTable.getPage());
        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);
    }
    setPage(pageNumber) {
        this.mfTable.setPage(pageNumber, this.rowsOnPage);
    }
    setRowsOnPage(rowsOnPage) {
        this.mfTable.setPage(this.activePage, rowsOnPage);
    }
};
Paginator.ɵfac = function Paginator_Factory(t) { return new (t || Paginator)(ɵngcc0.ɵɵdirectiveInject(DataTable, 8)); };
Paginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: Paginator, selectors: [["mfPaginator"]], inputs: { inputMfTable: ["mfTable", "inputMfTable"] }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c0, decls: 1, vars: 0, template: function Paginator_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2 });
Paginator.ctorParameters = () => [
    { type: DataTable, decorators: [{ type: Optional }] }
];
__decorate([
    Input("mfTable"),
    __metadata("design:type", DataTable)
], Paginator.prototype, "inputMfTable", void 0);
Paginator = __decorate([ __param(0, Optional()),
    __metadata("design:paramtypes", [DataTable])
], Paginator);

let BootstrapPaginator = class BootstrapPaginator {
    constructor() {
        this.rowsOnPageSet = [];
        this.minRowsOnPage = 0;
    }
    ngOnChanges(changes) {
        if (changes.rowsOnPageSet) {
            this.minRowsOnPage = min(this.rowsOnPageSet);
        }
    }
};
BootstrapPaginator.ɵfac = function BootstrapPaginator_Factory(t) { return new (t || BootstrapPaginator)(); };
BootstrapPaginator.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: BootstrapPaginator, selectors: [["mfBootstrapPaginator"]], inputs: { rowsOnPageSet: "rowsOnPageSet", mfTable: "mfTable" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 4, vars: 3, consts: [[3, "mfTable"], ["p", ""], ["class", "pagination", 4, "ngIf"], ["class", "pagination pull-right float-sm-right", 4, "ngIf"], [1, "pagination"], [1, "page-item", 3, "click"], [1, "page-link", 2, "cursor", "pointer"], ["class", "page-item", 3, "click", 4, "ngIf"], [1, "page-item", "active"], [1, "pagination", "pull-right", "float-sm-right"], ["class", "page-item", 3, "active", "click", 4, "ngFor", "ngForOf"]], template: function BootstrapPaginator_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵelementStart(0, "mfPaginator", 0, 1);
        ɵngcc0.ɵɵtemplate(2, BootstrapPaginator_ul_2_Template, 18, 13, "ul", 2);
        ɵngcc0.ɵɵtemplate(3, BootstrapPaginator_ul_3_Template, 2, 1, "ul", 3);
        ɵngcc0.ɵɵelementEnd();
    } if (rf & 2) {
        const _r0 = ɵngcc0.ɵɵreference(1);
        ɵngcc0.ɵɵproperty("mfTable", ctx.mfTable);
        ɵngcc0.ɵɵadvance(2);
        ɵngcc0.ɵɵproperty("ngIf", _r0.dataLength > _r0.rowsOnPage);
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", _r0.dataLength > ctx.minRowsOnPage);
    } }, directives: [Paginator, ɵngcc1.NgIf, ɵngcc1.NgForOf], encapsulation: 2 });
__decorate([
    Input("rowsOnPageSet"),
    __metadata("design:type", Object)
], BootstrapPaginator.prototype, "rowsOnPageSet", void 0);
__decorate([
    Input("mfTable"),
    __metadata("design:type", DataTable)
], BootstrapPaginator.prototype, "mfTable", void 0);

let NgxDataTableModule = class NgxDataTableModule {
};
NgxDataTableModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgxDataTableModule });
NgxDataTableModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgxDataTableModule_Factory(t) { return new (t || NgxDataTableModule)(); }, imports: [[
            CommonModule
        ]] });
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DataTable, [{
        type: Directive,
        args: [{
                selector: 'table[mfData]',
                exportAs: 'mfDataTable'
            }]
    }], function () { return [{ type: ɵngcc0.IterableDiffers }]; }, { inputData: [{
            type: Input,
            args: ["mfData"]
        }], sortBy: [{
            type: Input,
            args: ["mfSortBy"]
        }], sortOrder: [{
            type: Input,
            args: ["mfSortOrder"]
        }], sortByChange: [{
            type: Output,
            args: ["mfSortByChange"]
        }], sortOrderChange: [{
            type: Output,
            args: ["mfSortOrderChange"]
        }], rowsOnPage: [{
            type: Input,
            args: ["mfRowsOnPage"]
        }], activePage: [{
            type: Input,
            args: ["mfActivePage"]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(DefaultSorter, [{
        type: Component,
        args: [{
                selector: "mfDefaultSorter",
                template: `
        <a style="cursor: pointer" (click)="sort()" class="text-nowrap">
            <ng-content></ng-content>
            <span *ngIf="isSortedByMeAsc" class="glyphicon glyphicon-triangle-top fa fa-sort-up" aria-hidden="true"></span>
            <span *ngIf="isSortedByMeDesc" class="glyphicon glyphicon-triangle-bottom fa fa-sort-down" aria-hidden="true"></span>
        </a>`
            }]
    }], function () { return [{ type: DataTable }]; }, { sortBy: [{
            type: Input,
            args: ["by"]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Paginator, [{
        type: Component,
        args: [{
                selector: "mfPaginator",
                template: `<ng-content></ng-content>`
            }]
    }], function () { return [{ type: DataTable, decorators: [{
                type: Optional
            }] }]; }, { inputMfTable: [{
            type: Input,
            args: ["mfTable"]
        }] }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BootstrapPaginator, [{
        type: Component,
        args: [{
                selector: "mfBootstrapPaginator",
                template: `
    <mfPaginator #p [mfTable]="mfTable">
        <ul class="pagination" *ngIf="p.dataLength > p.rowsOnPage">
            <li class="page-item" [class.disabled]="p.activePage <= 1" (click)="p.setPage(1)">
                <a class="page-link" style="cursor: pointer">&laquo;</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 4 && p.activePage + 1 > p.lastPage" (click)="p.setPage(p.activePage - 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-4}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 3 && p.activePage + 2 > p.lastPage" (click)="p.setPage(p.activePage - 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 2" (click)="p.setPage(p.activePage - 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 1" (click)="p.setPage(p.activePage - 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-1}}</a>
            </li>
            <li class="page-item active">
                <a class="page-link" style="cursor: pointer">{{p.activePage}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 1 <= p.lastPage" (click)="p.setPage(p.activePage + 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+1}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 2 <= p.lastPage" (click)="p.setPage(p.activePage + 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 3 <= p.lastPage && p.activePage < 3" (click)="p.setPage(p.activePage + 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 4 <= p.lastPage && p.activePage < 2" (click)="p.setPage(p.activePage + 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+4}}</a>
            </li>
            <li class="page-item" [class.disabled]="p.activePage >= p.lastPage" (click)="p.setPage(p.lastPage)">
                <a class="page-link" style="cursor: pointer">&raquo;</a>
            </li>
        </ul>
        <ul class="pagination pull-right float-sm-right" *ngIf="p.dataLength > minRowsOnPage">
            <li class="page-item" *ngFor="let rows of rowsOnPageSet" [class.active]="p.rowsOnPage===rows" (click)="p.setRowsOnPage(rows)">
                <a class="page-link" style="cursor: pointer">{{rows}}</a>
            </li>
        </ul>
    </mfPaginator>
    `
            }]
    }], function () { return []; }, { rowsOnPageSet: [{
            type: Input,
            args: ["rowsOnPageSet"]
        }], mfTable: [{
            type: Input,
            args: ["mfTable"]
        }] }); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxDataTableModule, { declarations: function () { return [DataTable,
        DefaultSorter,
        Paginator,
        BootstrapPaginator]; }, imports: function () { return [CommonModule]; }, exports: function () { return [DataTable,
        DefaultSorter,
        Paginator,
        BootstrapPaginator]; } }); })();
/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgxDataTableModule, [{
        type: NgModule,
        args: [{
                imports: [
                    CommonModule
                ],
                declarations: [
                    DataTable,
                    DefaultSorter,
                    Paginator,
                    BootstrapPaginator
                ],
                exports: [
                    DataTable,
                    DefaultSorter,
                    Paginator,
                    BootstrapPaginator
                ]
            }]
    }], null, null); })();

/*
 * Public API Surface of data-table
 */

/**
 * Generated bundle index. Do not edit.
 */

export { BootstrapPaginator, DataTable, DefaultSorter, NgxDataTableModule, Paginator };

//# sourceMappingURL=angular-9-datatable.js.map