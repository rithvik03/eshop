import { __decorate, __metadata } from "tslib";
import { Component, Input } from "@angular/core";
import { DataTable } from "./data-table.directive";
import * as _ from "lodash";
let BootstrapPaginator = class BootstrapPaginator {
    constructor() {
        this.rowsOnPageSet = [];
        this.minRowsOnPage = 0;
    }
    ngOnChanges(changes) {
        if (changes.rowsOnPageSet) {
            this.minRowsOnPage = _.min(this.rowsOnPageSet);
        }
    }
};
__decorate([
    Input("rowsOnPageSet"),
    __metadata("design:type", Object)
], BootstrapPaginator.prototype, "rowsOnPageSet", void 0);
__decorate([
    Input("mfTable"),
    __metadata("design:type", DataTable)
], BootstrapPaginator.prototype, "mfTable", void 0);
BootstrapPaginator = __decorate([
    Component({
        selector: "mfBootstrapPaginator",
        template: `
    <mfPaginator #p [mfTable]="mfTable">
        <ul class="pagination" *ngIf="p.dataLength > p.rowsOnPage">
            <li class="page-item" [class.disabled]="p.activePage <= 1" (click)="p.setPage(1)">
                <a class="page-link" style="cursor: pointer">&laquo;</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 4 && p.activePage + 1 > p.lastPage" (click)="p.setPage(p.activePage - 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-4}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 3 && p.activePage + 2 > p.lastPage" (click)="p.setPage(p.activePage - 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 2" (click)="p.setPage(p.activePage - 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage > 1" (click)="p.setPage(p.activePage - 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage-1}}</a>
            </li>
            <li class="page-item active">
                <a class="page-link" style="cursor: pointer">{{p.activePage}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 1 <= p.lastPage" (click)="p.setPage(p.activePage + 1)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+1}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 2 <= p.lastPage" (click)="p.setPage(p.activePage + 2)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+2}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 3 <= p.lastPage && p.activePage < 3" (click)="p.setPage(p.activePage + 3)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+3}}</a>
            </li>
            <li class="page-item" *ngIf="p.activePage + 4 <= p.lastPage && p.activePage < 2" (click)="p.setPage(p.activePage + 4)">
                <a class="page-link" style="cursor: pointer">{{p.activePage+4}}</a>
            </li>
            <li class="page-item" [class.disabled]="p.activePage >= p.lastPage" (click)="p.setPage(p.lastPage)">
                <a class="page-link" style="cursor: pointer">&raquo;</a>
            </li>
        </ul>
        <ul class="pagination pull-right float-sm-right" *ngIf="p.dataLength > minRowsOnPage">
            <li class="page-item" *ngFor="let rows of rowsOnPageSet" [class.active]="p.rowsOnPage===rows" (click)="p.setRowsOnPage(rows)">
                <a class="page-link" style="cursor: pointer">{{rows}}</a>
            </li>
        </ul>
    </mfPaginator>
    `
    })
], BootstrapPaginator);
export { BootstrapPaginator };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYm9vdHN0cmFwLXBhZ2luYXRvci5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9hbmd1bGFyLTktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2Jvb3RzdHJhcC1wYWdpbmF0b3IuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBYSxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDbkQsT0FBTyxLQUFLLENBQUMsTUFBTSxRQUFRLENBQUM7QUFpRDVCLElBQWEsa0JBQWtCLEdBQS9CLE1BQWEsa0JBQWtCO0lBQS9CO1FBQzRCLGtCQUFhLEdBQUcsRUFBRSxDQUFDO1FBRzNDLGtCQUFhLEdBQUcsQ0FBQyxDQUFDO0lBT3RCLENBQUM7SUFMRyxXQUFXLENBQUMsT0FBWTtRQUNwQixJQUFJLE9BQU8sQ0FBQyxhQUFhLEVBQUU7WUFDdkIsSUFBSSxDQUFDLGFBQWEsR0FBRyxDQUFDLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQTtTQUNqRDtJQUNMLENBQUM7Q0FDSixDQUFBO0FBVjJCO0lBQXZCLEtBQUssQ0FBQyxlQUFlLENBQUM7O3lEQUFvQjtBQUN6QjtJQUFqQixLQUFLLENBQUMsU0FBUyxDQUFDOzhCQUFVLFNBQVM7bURBQUM7QUFGNUIsa0JBQWtCO0lBL0M5QixTQUFTLENBQUM7UUFDUCxRQUFRLEVBQUUsc0JBQXNCO1FBQ2hDLFFBQVEsRUFBRTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztLQTJDVDtLQUNKLENBQUM7R0FDVyxrQkFBa0IsQ0FXOUI7U0FYWSxrQkFBa0IiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkNoYW5nZXMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBEYXRhVGFibGUgfSBmcm9tIFwiLi9kYXRhLXRhYmxlLmRpcmVjdGl2ZVwiO1xyXG5pbXBvcnQgKiBhcyBfIGZyb20gXCJsb2Rhc2hcIjtcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6IFwibWZCb290c3RyYXBQYWdpbmF0b3JcIixcclxuICAgIHRlbXBsYXRlOiBgXHJcbiAgICA8bWZQYWdpbmF0b3IgI3AgW21mVGFibGVdPVwibWZUYWJsZVwiPlxyXG4gICAgICAgIDx1bCBjbGFzcz1cInBhZ2luYXRpb25cIiAqbmdJZj1cInAuZGF0YUxlbmd0aCA+IHAucm93c09uUGFnZVwiPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiBbY2xhc3MuZGlzYWJsZWRdPVwicC5hY3RpdmVQYWdlIDw9IDFcIiAoY2xpY2spPVwicC5zZXRQYWdlKDEpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+JmxhcXVvOzwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgPiA0ICYmIHAuYWN0aXZlUGFnZSArIDEgPiBwLmxhc3RQYWdlXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgLSA0KVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlLTR9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgPiAzICYmIHAuYWN0aXZlUGFnZSArIDIgPiBwLmxhc3RQYWdlXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgLSAzKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlLTN9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgPiAyXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgLSAyKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlLTJ9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgPiAxXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgLSAxKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlLTF9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtIGFjdGl2ZVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlfX08L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiICpuZ0lmPVwicC5hY3RpdmVQYWdlICsgMSA8PSBwLmxhc3RQYWdlXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgKyAxKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlKzF9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgKyAyIDw9IHAubGFzdFBhZ2VcIiAoY2xpY2spPVwicC5zZXRQYWdlKHAuYWN0aXZlUGFnZSArIDIpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3twLmFjdGl2ZVBhZ2UrMn19PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgICAgICA8bGkgY2xhc3M9XCJwYWdlLWl0ZW1cIiAqbmdJZj1cInAuYWN0aXZlUGFnZSArIDMgPD0gcC5sYXN0UGFnZSAmJiBwLmFjdGl2ZVBhZ2UgPCAzXCIgKGNsaWNrKT1cInAuc2V0UGFnZShwLmFjdGl2ZVBhZ2UgKyAzKVwiPlxyXG4gICAgICAgICAgICAgICAgPGEgY2xhc3M9XCJwYWdlLWxpbmtcIiBzdHlsZT1cImN1cnNvcjogcG9pbnRlclwiPnt7cC5hY3RpdmVQYWdlKzN9fTwvYT5cclxuICAgICAgICAgICAgPC9saT5cclxuICAgICAgICAgICAgPGxpIGNsYXNzPVwicGFnZS1pdGVtXCIgKm5nSWY9XCJwLmFjdGl2ZVBhZ2UgKyA0IDw9IHAubGFzdFBhZ2UgJiYgcC5hY3RpdmVQYWdlIDwgMlwiIChjbGljayk9XCJwLnNldFBhZ2UocC5hY3RpdmVQYWdlICsgNClcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj57e3AuYWN0aXZlUGFnZSs0fX08L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiIFtjbGFzcy5kaXNhYmxlZF09XCJwLmFjdGl2ZVBhZ2UgPj0gcC5sYXN0UGFnZVwiIChjbGljayk9XCJwLnNldFBhZ2UocC5sYXN0UGFnZSlcIj5cclxuICAgICAgICAgICAgICAgIDxhIGNsYXNzPVwicGFnZS1saW5rXCIgc3R5bGU9XCJjdXJzb3I6IHBvaW50ZXJcIj4mcmFxdW87PC9hPlxyXG4gICAgICAgICAgICA8L2xpPlxyXG4gICAgICAgIDwvdWw+XHJcbiAgICAgICAgPHVsIGNsYXNzPVwicGFnaW5hdGlvbiBwdWxsLXJpZ2h0IGZsb2F0LXNtLXJpZ2h0XCIgKm5nSWY9XCJwLmRhdGFMZW5ndGggPiBtaW5Sb3dzT25QYWdlXCI+XHJcbiAgICAgICAgICAgIDxsaSBjbGFzcz1cInBhZ2UtaXRlbVwiICpuZ0Zvcj1cImxldCByb3dzIG9mIHJvd3NPblBhZ2VTZXRcIiBbY2xhc3MuYWN0aXZlXT1cInAucm93c09uUGFnZT09PXJvd3NcIiAoY2xpY2spPVwicC5zZXRSb3dzT25QYWdlKHJvd3MpXCI+XHJcbiAgICAgICAgICAgICAgICA8YSBjbGFzcz1cInBhZ2UtbGlua1wiIHN0eWxlPVwiY3Vyc29yOiBwb2ludGVyXCI+e3tyb3dzfX08L2E+XHJcbiAgICAgICAgICAgIDwvbGk+XHJcbiAgICAgICAgPC91bD5cclxuICAgIDwvbWZQYWdpbmF0b3I+XHJcbiAgICBgXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBCb290c3RyYXBQYWdpbmF0b3IgaW1wbGVtZW50cyBPbkNoYW5nZXMge1xyXG4gICAgQElucHV0KFwicm93c09uUGFnZVNldFwiKSByb3dzT25QYWdlU2V0ID0gW107XHJcbiAgICBASW5wdXQoXCJtZlRhYmxlXCIpIG1mVGFibGU6IERhdGFUYWJsZTtcclxuXHJcbiAgICBtaW5Sb3dzT25QYWdlID0gMDtcclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBhbnkpOiBhbnkge1xyXG4gICAgICAgIGlmIChjaGFuZ2VzLnJvd3NPblBhZ2VTZXQpIHtcclxuICAgICAgICAgICAgdGhpcy5taW5Sb3dzT25QYWdlID0gXy5taW4odGhpcy5yb3dzT25QYWdlU2V0KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSJdfQ==