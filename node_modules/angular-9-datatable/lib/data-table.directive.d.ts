import { EventEmitter, SimpleChange, OnChanges, DoCheck, IterableDiffers } from "@angular/core";
import { ReplaySubject } from "rxjs";
import * as ɵngcc0 from '@angular/core';
export interface SortEvent {
    sortBy: string | string[];
    sortOrder: string;
}
export interface PageEvent {
    activePage: number;
    rowsOnPage: number;
    dataLength: number;
}
export interface DataEvent {
    length: number;
}
export declare class DataTable implements OnChanges, DoCheck {
    private differs;
    private diff;
    inputData: any[];
    sortBy: string | string[];
    sortOrder: string;
    sortByChange: EventEmitter<string | string[]>;
    sortOrderChange: EventEmitter<string>;
    rowsOnPage: number;
    activePage: number;
    private mustRecalculateData;
    data: any[];
    onSortChange: ReplaySubject<SortEvent>;
    onPageChange: EventEmitter<PageEvent>;
    constructor(differs: IterableDiffers);
    getSort(): SortEvent;
    setSort(sortBy: string | string[], sortOrder: string): void;
    getPage(): PageEvent;
    setPage(activePage: number, rowsOnPage: number): void;
    private calculateNewActivePage;
    private recalculatePage;
    ngOnChanges(changes: {
        [key: string]: SimpleChange;
    }): any;
    ngDoCheck(): any;
    private fillData;
    private caseInsensitiveIteratee;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DataTable, never>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<DataTable, "table[mfData]", ["mfDataTable"], { "inputData": "mfData"; "sortBy": "mfSortBy"; "sortOrder": "mfSortOrder"; "rowsOnPage": "mfRowsOnPage"; "activePage": "mfActivePage"; }, { "sortByChange": "mfSortByChange"; "sortOrderChange": "mfSortOrderChange"; }, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS10YWJsZS5kaXJlY3RpdmUuZC50cyIsInNvdXJjZXMiOlsiZGF0YS10YWJsZS5kaXJlY3RpdmUuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtBQUNBOztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEVtaXR0ZXIsIFNpbXBsZUNoYW5nZSwgT25DaGFuZ2VzLCBEb0NoZWNrLCBJdGVyYWJsZURpZmZlcnMgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBSZXBsYXlTdWJqZWN0IH0gZnJvbSBcInJ4anNcIjtcclxuZXhwb3J0IGludGVyZmFjZSBTb3J0RXZlbnQge1xyXG4gICAgc29ydEJ5OiBzdHJpbmcgfCBzdHJpbmdbXTtcclxuICAgIHNvcnRPcmRlcjogc3RyaW5nO1xyXG59XHJcbmV4cG9ydCBpbnRlcmZhY2UgUGFnZUV2ZW50IHtcclxuICAgIGFjdGl2ZVBhZ2U6IG51bWJlcjtcclxuICAgIHJvd3NPblBhZ2U6IG51bWJlcjtcclxuICAgIGRhdGFMZW5ndGg6IG51bWJlcjtcclxufVxyXG5leHBvcnQgaW50ZXJmYWNlIERhdGFFdmVudCB7XHJcbiAgICBsZW5ndGg6IG51bWJlcjtcclxufVxyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBEYXRhVGFibGUgaW1wbGVtZW50cyBPbkNoYW5nZXMsIERvQ2hlY2sge1xyXG4gICAgcHJpdmF0ZSBkaWZmZXJzO1xyXG4gICAgcHJpdmF0ZSBkaWZmO1xyXG4gICAgaW5wdXREYXRhOiBhbnlbXTtcclxuICAgIHNvcnRCeTogc3RyaW5nIHwgc3RyaW5nW107XHJcbiAgICBzb3J0T3JkZXI6IHN0cmluZztcclxuICAgIHNvcnRCeUNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZyB8IHN0cmluZ1tdPjtcclxuICAgIHNvcnRPcmRlckNoYW5nZTogRXZlbnRFbWl0dGVyPHN0cmluZz47XHJcbiAgICByb3dzT25QYWdlOiBudW1iZXI7XHJcbiAgICBhY3RpdmVQYWdlOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIG11c3RSZWNhbGN1bGF0ZURhdGE7XHJcbiAgICBkYXRhOiBhbnlbXTtcclxuICAgIG9uU29ydENoYW5nZTogUmVwbGF5U3ViamVjdDxTb3J0RXZlbnQ+O1xyXG4gICAgb25QYWdlQ2hhbmdlOiBFdmVudEVtaXR0ZXI8UGFnZUV2ZW50PjtcclxuICAgIGNvbnN0cnVjdG9yKGRpZmZlcnM6IEl0ZXJhYmxlRGlmZmVycyk7XHJcbiAgICBnZXRTb3J0KCk6IFNvcnRFdmVudDtcclxuICAgIHNldFNvcnQoc29ydEJ5OiBzdHJpbmcgfCBzdHJpbmdbXSwgc29ydE9yZGVyOiBzdHJpbmcpOiB2b2lkO1xyXG4gICAgZ2V0UGFnZSgpOiBQYWdlRXZlbnQ7XHJcbiAgICBzZXRQYWdlKGFjdGl2ZVBhZ2U6IG51bWJlciwgcm93c09uUGFnZTogbnVtYmVyKTogdm9pZDtcclxuICAgIHByaXZhdGUgY2FsY3VsYXRlTmV3QWN0aXZlUGFnZTtcclxuICAgIHByaXZhdGUgcmVjYWxjdWxhdGVQYWdlO1xyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczoge1xyXG4gICAgICAgIFtrZXk6IHN0cmluZ106IFNpbXBsZUNoYW5nZTtcclxuICAgIH0pOiBhbnk7XHJcbiAgICBuZ0RvQ2hlY2soKTogYW55O1xyXG4gICAgcHJpdmF0ZSBmaWxsRGF0YTtcclxuICAgIHByaXZhdGUgY2FzZUluc2Vuc2l0aXZlSXRlcmF0ZWU7XHJcbn1cclxuIl19